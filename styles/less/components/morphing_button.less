@import "../theme";

.content-style-overlay {
    padding-top: 100px;
    text-align: center;
}

.content-style-overlay h2 {
    margin: 0 0 1em 0;
    padding: 0;
    font-weight: 300;
    font-size: 3em;
}

.content-style-overlay p {
    margin: 0 auto;
    padding: 10px 0;
    max-width: 700px;
    text-align: justify;
    font-weight: 300;
    font-size: 1.5em;
}

.content-style-overlay .close-button {
    border: 2px solid @fancy-color-3;
    border-radius: 50%;
    line-height: 2.8;
}

.content-style-overlay .close-button:hover {
    border-color: @fancy-color-1;
}

.close-button {
    position: absolute;
    top: 1em;
    right: 1em;
    z-index: 100;
    display: block;
    overflow: hidden;
    width: 3em;
    height: 3em;
    text-align: center;
    line-height: 3;
    cursor: pointer;
}

.morph-button {
    position: relative;
    display: block;
    margin: 0 auto;
    font-size: 1rem;
}

.morph-button.open > button,
.morph-content {
    pointer-events: none;
}

.morph-button.open .morph-content {
    pointer-events: auto;
}

/* Common styles for overlay and modal type (fixed morph) */
.morph-button-fixed,
.morph-button-fixed .morph-content {
    width: 300px;
    height: 80px;
}

.morph-button-fixed > button {
    z-index: 1000;
    width: 100%;
    height: 100%;
}

.morph-button-fixed.open > button {
    opacity: 0;
    transition: opacity 0.1s;
}

.morph-button-fixed .morph-content {
    position: fixed;
    z-index: 900;
    opacity: 0;
    transition: opacity 0.3s 0.5s, width 0.4s 0.1s, height 0.4s 0.1s, top 0.4s 0.1s, left 0.4s 0.1s, margin 0.4s 0.1s;
}

.morph-button-fixed.open .morph-content {
    opacity: 1;
}

.morph-button-fixed .morph-content > div {
    visibility: hidden;
    height: 0;
    opacity: 0;
    transition: opacity 0.1s, visibility 0s 0.1s, height 0s 0.1s;
}

.morph-button-fixed.open .morph-content > div {
    visibility: visible;
    height: auto;
    opacity: 1;
    transition: opacity 0.3s 0.5s;
}

.morph-button-fixed.open .morph-content div,
.morph-content form {
    width: 100%;
    height: 100%;
}

.morph-button-fixed.active > button {
    z-index: 2000;
}

.morph-button-fixed.active .morph-content {
    z-index: 1900;
}

/* Transitions for overlay button */
.morph-button-overlay .morph-content {
    transition: opacity 0.3s 0.5s, width 0.4s 0.1s, height 0.4s 0.1s, top 0.4s 0.1s, left 0.4s 0.1s;
}

.morph-button-overlay.open .morph-content {
    transition: width 0.4s 0.1s, height 0.4s 0.1s, top 0.4s 0.1s, left 0.4s 0.1s;
}

/* Morph Button Style: Overlay */
.morph-button.morph-button-overlay {
    margin: 50px auto;
}

.morph-button-overlay .morph-content {
    overflow: hidden;
    background: @overlay-background-color;
    color: @overlay-text-body-color;
}

.morph-button-overlay.open .morph-content {
    top: 0 !important;
    left: 0 !important;
    width: 100%;
    height: 100%;
}

// Form styling
.content-style-form {
    position: relative;
    text-align: left;

    h2 {
        margin: 0;
        padding: 0.4em 0 0.3em;
        text-align: center;
        font-weight: 300;
        font-size: 3.5em;
    }
    form {
        padding: 10px 30px;
        p {
            font-size: 0.7em;
        }
        label {
            display: block;
            padding: 10px 0 0;
            color: @fancy-color-2;
            text-transform: uppercase;
            letter-spacing: 1px;
            font-weight: bold;
        }
    }
    input[type="text"],
    input[type="email"],
    input[type="password"],
    textarea {
        padding: 10px;
        width: 100%;
        border: 2px solid @fancy-color-2;
        background: transparent;
        color: @fancy-color-3;
        font-weight: 300;
        font-size: 2.2em;
    }
    input[type="text"]:focus,
    input[type="email"]:focus,
    input[type="password"]:focus,
    textarea {
        border-color: @fancy-color-1;
        color: @fancy-color-1;
    }
    input:focus,
    textarea:focus {
        outline: 0;
    }
    button {
        display: block;
        margin-top: 2.5em;
        padding: 1.5em;
        width: 100%;
        border: none;
        background: @fancy-color-1;
        color: @fancy-color-3;
        text-transform: uppercase;
        letter-spacing: 1px;
        font-weight: 800;
        font-size: 1.25em;
    }
    input, button {
        box-sizing: border-box;
    }
    h2,
    p,
    .close-button {
        opacity: 0;
        transition: opacity 0.2s 0.3s, transform 0.2s 0.3s;
        transform: translateY(50px);
    }

    p:first-child {
        transition-delay: 0.55s;
    }

    p:nth-child(2) {
        transition-delay: 0.6s;
    }

    p:nth-child(3) {
        transition-delay: 0.65s;
    }

    p:nth-child(4) {
        transition-delay: 0.7s;
    }
}

.morph-button.open .content-style-form h2,
.morph-button.open .content-style-form p,
.morph-button.open .content-style-form .close-button {
    opacity: 1;
    transform: translateY(0);
}


// Scrolling helpers

.noscroll {
    overflow: hidden;
}

.morph-button-overlay.scroll .morph-content {
    overflow-y: auto;
}

.no-transition {
    transition: none !important;
}

.always-disable-scrolling {
    overflow: hidden !important;
}

/* Media Queries */

@media screen and (max-width: 600px) {
    .morph-button-modal.open .morph-content {
        top: 0% !important;
        left: 0% !important;
        margin: 0;
        width: 100%;
        height: 100%;
        overflow-y: scroll;
        transition: width 0.4s 0.1s, height 0.4s 0.1s, top 0.4s 0.1s, left 0.4s 0.1s;
    }
}

@media screen and (max-width: 400px) {
    .morph-button-fixed,
    .morph-button-fixed .morph-content {
        width: 200px;
        height: 80px;
    }

    .morph-button-fixed > button {
        font-size: 75%;
    }
}
